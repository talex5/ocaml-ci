(executables
 (names main local)
 (libraries logs.fmt
            fmt.tty
            current
            current_web
            current_docker
            current_git
            current_github
            current_rpc
            capnp-rpc-unix
            mirage-crypto-rng.unix
            ocaml_ci
            ocaml-ci-api
            prometheus)
 (preprocess (pps ppx_deriving_yojson)))

; This is a hack to work around https://github.com/ocaml/dune/issues/3499
; We first build the binaries, then copy them to a new name, then install them.
; This allows us to add in the run-time dependency on ocaml-ci-solver in the
; copy step.

(install
 (section bin)
 (package ocaml-ci-service)
 (files (main-copy.exe as ocaml-ci-service)))

(install
 (section bin)
 (package ocaml-ci-service)
 (files (local-copy.exe as ocaml-ci-local)))

(rule
  (target main-copy.exe)
  (deps (package ocaml-ci-solver))
  (action (copy main.exe main-copy.exe)))

(rule
  (target local-copy.exe)
  (deps (package ocaml-ci-solver))
  (action (copy local.exe local-copy.exe)))
